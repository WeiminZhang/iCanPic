/*****************************************************************************
*	GSI a socket interface for Micro-controllers and Controller Area Network *
*   Copyright (C) 2014 Glenn Self                                            *
*                                                                            *
*   This program is free software: you can redistribute it and/or modify     *
*   it under the terms of the GNU General Public License as published by     *
*   the Free Software Foundation, either version 3 of the License, or        *
*   (at your option) any later version.                                      *
*                                                                            *
*    This program is distributed in the hope that it will be useful,         *
*    but WITHOUT ANY WARRANTY; without even the implied warranty of          *
*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *
*    GNU General Public License for more details.                            *
*                                                                            *
*    You should have received a copy of the GNU General Public License       *
*    along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
*****************************************************************************/

/////////////////////////////////////////////////////////////////////////////
// Name:        SetDevice.h
// Purpose:     
// Author:      
// Modified by: 
// Created:     27/02/2007 17:01:15
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), 27/02/2007 17:01:15

#ifndef _SETDEVICE_H_
#define _SETDEVICE_H_

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma interface "SetDevice.h"
#endif

/*!
 * Includes
 */

////@begin includes
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define GSI_ID_CLIENT_TEST_SETDEVICE 10021
#define ID_LISTBOX1 10022
#define SYMBOL_SETDEVICE_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxCLOSE_BOX|wxDIALOG_MODAL
#define SYMBOL_SETDEVICE_TITLE _("Set device")
#define SYMBOL_SETDEVICE_IDNAME GSI_ID_CLIENT_TEST_SETDEVICE
#define SYMBOL_SETDEVICE_SIZE wxSize(400, 300)
#define SYMBOL_SETDEVICE_POSITION wxDefaultPosition
////@end control identifiers

/*!
 * Compatibility
 */

#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif

/*!
 * SetDevice class declaration
 */

class SetDevice: public wxDialog
{    
    DECLARE_DYNAMIC_CLASS( SetDevice )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    SetDevice();
    SetDevice( wxWindow* parent, wxWindowID id = SYMBOL_SETDEVICE_IDNAME, const wxString& caption = SYMBOL_SETDEVICE_TITLE, const wxPoint& pos = SYMBOL_SETDEVICE_POSITION, const wxSize& size = SYMBOL_SETDEVICE_SIZE, long style = SYMBOL_SETDEVICE_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_SETDEVICE_IDNAME, const wxString& caption = SYMBOL_SETDEVICE_TITLE, const wxPoint& pos = SYMBOL_SETDEVICE_POSITION, const wxSize& size = SYMBOL_SETDEVICE_SIZE, long style = SYMBOL_SETDEVICE_STYLE );

    /// Destructor
    ~SetDevice();

    /// Initialises member variables
    void Init();

    /// Creates the controls and sizers
    void CreateControls();

////@begin SetDevice event handler declarations

////@end SetDevice event handler declarations

////@begin SetDevice member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end SetDevice member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin SetDevice member variables
    wxChoice* m_Choice;
////@end SetDevice member variables
};

#endif
    // _SETDEVICE_H_
